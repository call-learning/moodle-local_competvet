define("local_competvet/local/forms/eval_observation_ask",["exports","core/str","core/notification","core/ajax","./modal_debug","mod_competvet/local/forms/eval_observation_ask"],(function(_exports,_str,_notification,_ajax,_modal_debug,_eval_observation_ask){function _interopRequireDefault(obj){return obj&&obj.__esModule?obj:{default:obj}}
/**
   * Javascript adding a new observation.
   *
   * @module     local_competvet/local/forms/observation_add_form
   * @copyright  2023 Laurent David <laurent@call-learning.fr>
   * @license    http://www.gnu.org/copyleft/gpl.html GNU GPL v3 or later
   */Object.defineProperty(_exports,"__esModule",{value:!0}),_exports.initUsersActionMobileView=_exports.init=void 0,_notification=_interopRequireDefault(_notification),_ajax=_interopRequireDefault(_ajax);_exports.init=modulename=>{(0,_eval_observation_ask.init)(modulename,_modal_debug.createModalDebugFromEvent)};_exports.initUsersActionMobileView=(modulename,planningId,studentId,context)=>{const selectedElements=document.querySelectorAll(".ask-observation-modal [data-user-id]");selectedElements&&selectedElements.forEach((element=>{element.addEventListener("click",(async event=>{event.preventDefault();const askEvalPayload={context:context,planningid:planningId,observerid:element.dataset.userId,studentid:studentId};try{const askObservationReturn=await _ajax.default.call([{methodname:"local_competvet_ask_eval_observation",args:askEvalPayload}])[0];if(askObservationReturn.todoid)try{const userInfo=await _ajax.default.call([{methodname:"mod_competvet_get_user_profile",args:{userid:element.dataset.userId}}])[0],usernameString=await(0,_str.get_string)("observation:asked:body","mod_competvet",userInfo.fullname);await(0,_modal_debug.createModalDebug)({content:usernameString,debugs:[{apifunction:"local_competvet_ask_eval_observation",params:JSON.stringify(askEvalPayload),results:[JSON.stringify(askObservationReturn)]}]}),element.classList.add("text-success")}catch(error){await _notification.default.exception(error)}}catch(error){const cannotAddString=await(0,_str.get_string)("todo:cannotadd","mod_competvet");await _notification.default.exception({message:cannotAddString})}}))}))}}));

//# sourceMappingURL=eval_observation_ask.min.js.map