define("local_competvet/local/forms/modal_debug",["exports","core/notification","core/modal_factory","core/modal_events","core/templates"],(function(_exports,_notification,_modal_factory,_modal_events,_templates){function _interopRequireDefault(obj){return obj&&obj.__esModule?obj:{default:obj}}
/**
   * Javascript adding a new observation.
   *
   * @module     local_competvet/local/forms/observation_add_form
   * @copyright  2023 Laurent David <laurent@call-learning.fr>
   * @license    http://www.gnu.org/copyleft/gpl.html GNU GPL v3 or later
   */Object.defineProperty(_exports,"__esModule",{value:!0}),_exports.createModalDebugFromEvent=_exports.createModalDebug=void 0,_notification=_interopRequireDefault(_notification),_modal_factory=_interopRequireDefault(_modal_factory),_modal_events=_interopRequireDefault(_modal_events),_templates=_interopRequireDefault(_templates);const createModalDebug=async data=>{try{const modal=await _modal_factory.default.create({title:data.title,body:_templates.default.render("local_competvet/modal_debug",{content:data.content,debugs:data.debugs}),type:_modal_factory.default.types.CANCEL,large:!0});return modal.show(),modal}catch(error){await _notification.default.exception(error)}};_exports.createModalDebug=createModalDebug;_exports.createModalDebugFromEvent=async event=>{const data={...event.detail};(await createModalDebug(data)).getRoot().on(_modal_events.default.hidden,(()=>{data.returnurl&&(window.location.assign(event.detail.returnurl),window.location.reload())}))}}));

//# sourceMappingURL=modal_debug.min.js.map