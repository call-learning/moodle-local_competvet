define("local_competvet/local/forms/eval_observation_add_from_todo",["exports","core/ajax","core/modal_events","mod_competvet/local/forms/generic_form_helper","./modal_debug","core/str","core/notification"],(function(_exports,_ajax,_modal_events,_generic_form_helper,_modal_debug,_str,_notification){function _interopRequireDefault(obj){return obj&&obj.__esModule?obj:{default:obj}}
/**
   * Javascript adding a new observation.
   *
   * @module     local_competvet/local/forms/observation_add_form
   * @copyright  2023 Laurent David <laurent@call-learning.fr>
   * @license    http://www.gnu.org/copyleft/gpl.html GNU GPL v3 or later
   */Object.defineProperty(_exports,"__esModule",{value:!0}),_exports.init=void 0,_ajax=_interopRequireDefault(_ajax),_modal_events=_interopRequireDefault(_modal_events),_notification=_interopRequireDefault(_notification);_exports.init=async modulename=>{const selectedElements=(0,_generic_form_helper.getSelectedElement)("addfromtodo");selectedElements&&selectedElements.forEach((element=>{element.addEventListener("click",(async event=>{event.preventDefault();const data=event.target.closest("[data-action]").dataset,payLoad={category:1,planningid:data.planningId,studentid:data.studentId,observerid:data.observerId,context:data.context},observation=await _ajax.default.call([{methodname:"local_competvet_create_eval_observation",args:payLoad}])[0],modalObs=await(0,_modal_debug.createModalDebug)({content:await(0,_str.get_string)("observation:created","local_competvet"),debugs:[{apifunction:"local_competvet_create_eval_observation",params:JSON.stringify(payLoad),results:[JSON.stringify(observation)]}]});modalObs.show();const returnUrl=data.returnurl.replace("OBSERVATIONID",observation.observationid);modalObs.getRoot().on(_modal_events.default.cancel,(()=>processTodo(data.todoId,{id:observation.observationid,returnurl:returnUrl},modulename)))}))}))};const processTodo=async(todoId,editObservationParameters,modulename)=>{const payLoad={id:todoId};try{const updatedTodo=await _ajax.default.call([{methodname:"local_competvet_update_todo_status",args:payLoad}])[0],modalTodo=await(0,_modal_debug.createModalDebug)({content:await(0,_str.get_string)("todo:updated","local_competvet"),debugs:[{apifunction:"local_competvet_update_todo",params:JSON.stringify(payLoad),results:[JSON.stringify(updatedTodo)]}]});modalTodo.show(),modalTodo.getRoot().on(_modal_events.default.cancel,(()=>{(0,_generic_form_helper.genericFormCreate)(editObservationParameters,"edit",modulename,_modal_debug.createModalDebugFromEvent)}))}catch(error){await _notification.default.exception(error)}}}));

//# sourceMappingURL=eval_observation_add_from_todo.min.js.map